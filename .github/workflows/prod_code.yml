# This is a basic workflow to help you get started with Actions

name: Prod Code

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [prod]
  pull_request:
    branches: [prod]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.0
        with:
          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
          node-version: 18.17
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Cache Data
        id: cache-data
        uses: actions/cache@v4
        with:
          path: frontend/public/data
          key: ${{ runner.os }}-data

      - name: Build 🛠️ data 💾 from airtable
        env:
          DATA_PATH: ../frontend/public
          AIRTABLE_API_KEY: ${{secrets.AIRTABLE_API_KEY}}
          AIRTABLE_BASE: ${{secrets.AIRTABLE_BASE}}
        run: |
          cd backend
          npm i
          npm run import

      - name: Build 🛠️ frontend code 🖥️
        env:
          VITE_DATA_URL: /data
        run: |
          cd frontend
          npm i
          npm run build

      - name: Deploy 🚀 data 💾 and code 🖥️
        uses: Dylan700/sftp-upload-action@latest
        with:
          server: ${{secrets.FTP_URL}}
          username: ${{secrets.FTP_USERNAME}}
          password: ${{secrets.FTP_PASSWORD}}
          port: 22
          uploads: |
            ./frontend/build/ => /home/lardepa/lindex/
          delete: true
          dry-run: true
